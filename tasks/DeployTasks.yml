version: '3.41.0'

includes:
  installTasks: ./InstallTasks.yml

tasks:
  create-namespace:
    internal: true
    deps:
      - :create-cluster
    vars:
      NAMESPACE: '{{default "dev" .NAMESPACE}}'
    cmds:
      - kubectl create namespace {{.NAMESPACE}} --dry-run=client -o yaml | kubectl apply -f -

  apply-all-manifests:
    aliases:
      - all-manifests
    deps:
      - :create-cluster
    cmds:
      - kubectl apply -f manifests/*
    requires:
      vars:
        - CLUSTER_NAME
    preconditions:
      - test -d manifests

  add-argo-helm-repo:
    internal: true
    aliases:
      - argo-helm
    deps:
      - :create-cluster
      - installTasks:helm
    cmds:
      - helm repo add argo https://argoproj.github.io/argo-helm
    status:
      - helm repo list | grep -i argo

  argo-workflows:
    aliases:
      - workflows
    deps:
      - :create-cluster
      - installTasks:helm
      - add-argo-helm-repo
    cmds:
      - task: create-namespace
        vars:
          NAMESPACE: $ARGO_WORKFLOWS_NAMESPACE
      - helm upgrade -i -f values/argo-workflows-values.yaml $ARGO_WORKFLOWS_RELEASE_NAME argo/argo-workflows
    requires:
      vars:
        - ARGO_WORKFLOWS_RELEASE_NAME
    preconditions:
      - test -d values
      - test -f values/argo-workflows-values.yaml

  argo-events:
    aliases:
      - events
    deps:
      - :create-cluster
      - installTasks:helm
      - add-argo-helm-repo
    cmds:
      - task: create-namespace
        vars:
          NAMESPACE: $ARGO_EVENTS_NAMESPACE
      - helm upgrade -i -f values/argo-events-values.yaml $ARGO_EVENTS_RELEASE_NAME argo/argo-events
    requires:
      vars:
        - ARGO_EVENTS_RELEASE_NAME
    preconditions:
      - test -d values
      - test -f values/argo-events-values.yaml

  argo-cd:
    deps:
      - :create-cluster
      - installTasks:helm
      - installTasks:argocd-cli
      - add-argo-helm-repo
    cmds:
      - task: create-namespace
        vars:
          NAMESPACE: $ARGO_CD_NAMESPACE
      - helm upgrade -i -f values/argo-cd-values.yaml $ARGO_CD_RELEASE_NAME argo/argo-cd
      - echo "Here's the admin password for the ArgoCD UI..."
      - argocd admin initial-password -n $ARGO_CD_NAMESPACE
      - echo "You can port forward for easy access to the ArgoCD UI... You can access via https://localhost:8080 after running the following.."
      - echo "kubectl port-forward svc/${ARGO_CD_RELEASE_NAME}-server -n $ARGO_CD_NAMESPACE 8080:443"
    requires:
      vars:
        - ARGO_CD_RELEASE_NAME
    status:
      - argocd --version
    preconditions:
      - test -d values
      - test -f values/argo-cd-values.yaml

  add-localstack-helm-repo:
    internal: true
    aliases:
      - argo-helm
    deps:
      - :create-cluster
      - installTasks:helm
    cmds:
      - helm repo add localstack-repo https://helm.localstack.cloud
    status:
      - helm repo list | grep -i localstack

  localstack:
    deps:
      - :create-cluster
      - installTasks:helm
      - add-localstack-helm-repo
    cmds:
      - task: create-namespace
        vars:
          NAMESPACE: $LOCALSTACK_NAMESPACE
      - helm upgrade -i -f values/localstack-values.yaml $LOCALSTACK_RELEASE_NAME localstack-repo/localstack
    requires:
      vars:
        - LOCALSTACK_RELEASE_NAME
    preconditions:
      - test -d values
      - test -f values/localstack-values.yaml

  add-crossplane-helm-repo:
    internal: true
    aliases:
      - crossplane-helm
    deps:
      - :create-cluster
      - installTasks:helm
    cmds:
      - helm repo add crossplane-stable https://charts.crossplane.io/stable
    status:
      - helm repo list | grep -i crossplane

  crossplane:
    deps:
      - :create-cluster
      - installTasks:helm
      - add-crossplane-helm-repo
    cmds:
      - task: create-namespace
        vars:
          NAMESPACE: $CROSSPLANE_NAMESPACE
      - helm upgrade -i -f values/crossplane-values.yaml $CROSSPLANE_RELEASE_NAME crossplane-stable/crossplane
    requires:
      vars:
        - CROSSPLANE_RELEASE_NAME
    status:
      - argocd --version
    preconditions:
      - test -d values
      - test -f values/crossplane-values.yaml
